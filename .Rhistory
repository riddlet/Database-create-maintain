'Nonstig.C.adj', 'Stig.C.adj',
'Nonstig.T.adj', 'Stig.T.adj',
'Nonstig.C.cov', 'Stig.C.cov',
'Nonstig.T.cov', 'Stig.T.cov')
for(i in 1:10000){
n <- 100
a <- cor.mat(c(0,0,0))
X <- as.data.frame(mvrnorm(n=n, mu=c(0,0,0), Sigma=a))
p <- list(group = groups[i], condition = .5)
X[,2] <- mycut(X[,2], c(0, 1-p$group, 1))-1
X[,3] <- mycut(X[,3], c(0, 1-p$condition, 1))-1
df1<-model.mat(X)
df.preds <- data.frame(effect=c('cov', 'group', 'cond',
'cov*group', 'cov*cond', 'group*cond',
'cov*group*cond'),
value=c(1,0,0,
slope[i],0,.25,
0))
y.obs <- get.outcome(df1, df.preds, 1)
df1<-cbind(y.obs, df1)
df1$group<-factor(df1$group, labels = c('Nonstigmatized', 'Stigmatized'))
df1$cond<-factor(df1$cond, labels=c('Control', 'Treatment'))
b<-lm(y.obs~cov+group*cond, dat=df1)
adjustedmeans <- effect('group*cond', b)
unadjustedmeans <- tapply(df1$y.obs, list(df1$group, df1$cond), mean)
cov.means <- tapply(df1$cov, list(df1$group, df1$cond), mean)
results.mat[i, 4:8] <- b$coefficients
results.mat[i, 9:13] <- summary(b)$coefficients[c(1,2,3,4,5),4]
means.mat[i, 4:15] <- c(unadjustedmeans[1:4], adjustedmeans$fit,
cov.means[1:4])
}
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
coefs <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars=c('intercept', 'cov', 'group', 'cond', 'group:cond'))
ggplot(coefs, aes(x=value, group=as.factor(slope),
color=as.factor(slope))) +
geom_density() + facet_grid(variable~groups, scales='free') + theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .3)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
head(df.pvals)
### there's something fishy here. Running this simulation should return values of zero, but they're biased by .06 or so. I suspect that the interaction term of .25 is getting distributed across the other parameters
#options(contrasts = c('contr.treatment','contr.poly'))
options(contrasts = c('contr.sum','contr.poly'))
slope <- sample(rep(c(0, .5, 1), len=10000))
groups <- sample(rep(c(.25, .5, .75), len=10000))
condition <- sample(rep(c(.5), len=10000))
results.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 10)))
colnames(results.mat) <- c('slope', 'groups', 'condition', 'intercept', 'cov',
'group', 'cond', 'group:cond', 'p.intercept',
'p.cov', 'p.group', 'p.cond', 'p.group:cond')
means.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 12)))
colnames(means.mat) <- c('slope', 'groups', 'conditon',
'Nonstig.C.unadj', 'Stig.C.unadj',
'Nonstig.T.unadj', 'Stig.T.unadj',
'Nonstig.C.adj', 'Stig.C.adj',
'Nonstig.T.adj', 'Stig.T.adj',
'Nonstig.C.cov', 'Stig.C.cov',
'Nonstig.T.cov', 'Stig.T.cov')
for(i in 1:10000){
n <- 100
a <- cor.mat(c(0,0,0))
X <- as.data.frame(mvrnorm(n=n, mu=c(0,0,0), Sigma=a))
p <- list(group = groups[i], condition = .5)
X[,2] <- mycut(X[,2], c(0, 1-p$group, 1))-1
X[,3] <- mycut(X[,3], c(0, 1-p$condition, 1))-1
df1<-model.mat(X)
df.preds <- data.frame(effect=c('cov', 'group', 'cond',
'cov*group', 'cov*cond', 'group*cond',
'cov*group*cond'),
value=c(1,0,0,
slope[i],0,.25,
0))
y.obs <- get.outcome(df1, df.preds, 1)
df1<-cbind(y.obs, df1)
df1$group<-factor(df1$group, labels = c('Nonstigmatized', 'Stigmatized'))
df1$cond<-factor(df1$cond, labels=c('Control', 'Treatment'))
b<-lm(y.obs~cov+group*cond, dat=df1)
adjustedmeans <- effect('group*cond', b)
unadjustedmeans <- tapply(df1$y.obs, list(df1$group, df1$cond), mean)
cov.means <- tapply(df1$cov, list(df1$group, df1$cond), mean)
results.mat[i, 4:8] <- b$coefficients
results.mat[i, 9:13] <- summary(b)$coefficients[c(1,2,3,4,5),4]
means.mat[i, 4:15] <- c(unadjustedmeans[1:4], adjustedmeans$fit,
cov.means[1:4])
}
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
coefs <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars=c('intercept', 'cov', 'group', 'cond', 'group:cond'))
ggplot(coefs, aes(x=value, group=as.factor(slope),
color=as.factor(slope))) +
geom_density() + facet_grid(variable~groups, scales='free') + theme_bw()
### there's something fishy here. Running this simulation should return values of zero, but they're biased by .06 or so. I suspect that the interaction term of .25 is getting distributed across the other parameters
options(contrasts = c('contr.treatment','contr.poly'))
#options(contrasts = c('contr.sum','contr.poly'))
slope <- sample(rep(c(0, .5, 1), len=10000))
groups <- sample(rep(c(.25, .5, .75), len=10000))
condition <- sample(rep(c(.5), len=10000))
results.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 10)))
colnames(results.mat) <- c('slope', 'groups', 'condition', 'intercept', 'cov',
'group', 'cond', 'group:cond', 'p.intercept',
'p.cov', 'p.group', 'p.cond', 'p.group:cond')
means.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 12)))
colnames(means.mat) <- c('slope', 'groups', 'conditon',
'Nonstig.C.unadj', 'Stig.C.unadj',
'Nonstig.T.unadj', 'Stig.T.unadj',
'Nonstig.C.adj', 'Stig.C.adj',
'Nonstig.T.adj', 'Stig.T.adj',
'Nonstig.C.cov', 'Stig.C.cov',
'Nonstig.T.cov', 'Stig.T.cov')
for(i in 1:10000){
n <- 100
a <- cor.mat(c(-.25,0,0))
X <- as.data.frame(mvrnorm(n=n, mu=c(0,0,0), Sigma=a))
p <- list(group = groups[i], condition = .5)
X[,2] <- mycut(X[,2], c(0, 1-p$group, 1))-1
X[,3] <- mycut(X[,3], c(0, 1-p$condition, 1))-1
df1<-model.mat(X)
df.preds <- data.frame(effect=c('cov', 'group', 'cond',
'cov*group', 'cov*cond', 'group*cond',
'cov*group*cond'),
value=c(1,0,0,
slope[i],0,.25,
0))
y.obs <- get.outcome(df1, df.preds, 1)
df1<-cbind(y.obs, df1)
df1$group<-factor(df1$group, labels = c('Nonstigmatized', 'Stigmatized'))
df1$cond<-factor(df1$cond, labels=c('Control', 'Treatment'))
b<-lm(y.obs~cov+group*cond, dat=df1)
adjustedmeans <- effect('group*cond', b)
unadjustedmeans <- tapply(df1$y.obs, list(df1$group, df1$cond), mean)
cov.means <- tapply(df1$cov, list(df1$group, df1$cond), mean)
results.mat[i, 4:8] <- b$coefficients
results.mat[i, 9:13] <- summary(b)$coefficients[c(1,2,3,4,5),4]
means.mat[i, 4:15] <- c(unadjustedmeans[1:4], adjustedmeans$fit,
cov.means[1:4])
}
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
coefs <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars=c('intercept', 'cov', 'group', 'cond', 'group:cond'))
ggplot(coefs, aes(x=value, group=as.factor(slope),
color=as.factor(slope))) +
geom_density() + facet_grid(variable~groups, scales='free') + theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .3)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .25)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.cond'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .25)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group:cond'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .25)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .25)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
install.packages('rstan', dependencies=T)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = 'Desktop/8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
print (fit)
print(fit)
plot(fit)
pairs(fit, pars = c("mu", "tau", "lp__"))
la <- extract(fit, permuted = TRUE) # return a list of arrays
mu <- la$mu
a <- extract(fit, permuted = FALSE)
a2 <- as.array(fit)
m <- as.matrix(fit)
print(fit, digits = 1)
50/3
sqrt(16.66)
setwd("~/Documents/Gits/Database-create-maintain")
list.files()
list.files('..')
list.files('../Data')
list.files('../Data/3 CSV Files')
df <- read.csv('../Data/3 CSV Files/essays9.29.15.csv', sep=|, quote="")
df <- read.csv('../Data/3 CSV Files/essays9.29.15.csv', sep='|', quote="")
head(df)
table(df$Study)
df <- read.csv('../Data/3 CSV Files/demog9.11.15.csv', sep='|', quote="")
df.e <- read.csv('../Data/3 CSV Files/essays9.29.15.csv', sep='|', quote="")
head(df)
df <- read.csv('../Data/3 CSV Files/demog9.11.15.csv')
head(df)
df
df[1:100,]
table(df$Study)
df[which(df$Study=='CO/CA Latino'),]
df.e <- read.csv('../Data/3 CSV Files/essays9.29.15.csv', sep='|', quote="")
df.d <- read.csv('../Data/3 CSV Files/demog9.11.15.csv')
df.e[which(df$Study=='CO/CA Latino'),]
df[which(df$Study=='CO/CA Latino'),]
lat.ids <- df.e$ID[which(df$Study=='CO/CA Latino'),]
lat.ids <- df.e$ID[which(df$Study=='CO/CA Latino')]
lat.ids
lat.ids <- df.e$ID[which(df.e$Study=='CO/CA Latino')]
lat.ids
df.d[which(df.d$Study=='CO/CA Latino'),]
lat.ids <- paste(as.character(lat.ids), '.3', sep='')
df.e$ID[which(df.e$Study=='CO/CA Latino')] <- lat.ids
df.e$ID <- as.character(df.e$ID)
df.e$ID[which(df.e$Study=='CO/CA Latino')] <- lat.ids
table(df.e$ID)
df <- left_join(df.e, df.d)
library(reshape2)
library(plyr)
library(dplyr)
df <- left_join(df.e, df.d)
head(df)
df <- df[,1:7]
head(df.d)
df <- left_join(df.e, df.d[,c(1,3)])
head(df)
table(df$Study, df$Cohort)
write.table(df, 'essays9.30.15.csv', sep='|', row.names=F, quote=F)
df$Essay[4]
df$Essay <- as.character(df$Essay)
write.table(df, 'essays9.30.15.csv', sep='|', row.names=F, quote=F)
dim(unique(df))
df<-unique(df)
write.table(df, 'essays9.30.15.csv', sep='|', row.names=F, quote=F)
df[964,]
df[963,]
df[962,]
getannotations <- function(parentdir) {
dirlist <- list.files(parentdir, pattern='lirsm*')
essays <- ''
for(i in dirlist){
esslist <- list.files(paste(parentdir, i, sep='/'), pattern='.*.txt')
essays <- c(essays, esslist)
}
return(essays)
}
d <- '../Data/annotation_tool/My Files/'
ess.file <- getannotations(d)
ess.first <- ess.file[which(str_detect(ess.file, '^[0-9]'))]
library(stringr)
ess.first <- ess.file[which(str_detect(ess.file, '^[0-9]'))]
file.comp <- str_split(ess.first, pattern = '_')
file.comp <- file.comp[-1]
ess.first <- ess.first[-1]
filedetails <- data.frame(filename=ess.first,
id=unlist(lapply(file.comp, '[[', 1)),
cond=unlist(lapply(file.comp, '[[', 2)),
date=unlist(lapply(file.comp, '[[', 3)),
int=unlist(lapply(file.comp, '[[', 4))
)
filedetals[1:10]
head(filedetails)
filedetails$int <- substr(filedetails$int, 1,1)
head(filedetails)
table(int)
table(filedetails$int)
filedetails <- data.frame(filename=ess.first,
id=unlist(lapply(file.comp, '[[', 1)),
cond=unlist(lapply(file.comp, '[[', 2)),
date=unlist(lapply(file.comp, '[[', 3)),
int=unlist(lapply(file.comp, '[[', 4)))
table(filedetails$int)
filedetails$int <- substr(filedetails$int, 1,1)
table(df$Study)
?read.table
read.table(paste(d, filedetails$filename[1]))
read.table(paste(d, filedetails$filename[1], sep=''))
ess.file
?matrix
d <- '../Data/annotation_tool/My Files/'
list.files(d, pattern='lirsm*')
list.files(paste(d, 'lirsm', sep='/'))
getannotations <- function(parentdir) {
dirlist <- list.files(parentdir, pattern='lirsm*')
essays <- matrix('', 1, 2)
for(i in dirlist){
esslist <- list.files(paste(parentdir, i, sep='/'), pattern='.*.txt')
essays <- c(essays, esslist)
path <- paste(parentdir, i, esslist, sep='/')
}
return(cbind(essays, path)
}
getannotations <- function(parentdir){
dirlist <- list.files(parentdir, pattern='lirsm*')
essays <- matrix('', 1, 2)
for(i in dirlist){
esslist <- list.files(paste(parentdir, i, sep='/'), pattern='.*.txt')
essays <- c(essays, esslist)
path <- paste(parentdir, i, esslist, sep='/')
}
return(cbind(essays, path))
}
a<-getannotation(d)
a<-getannotations(d)
essays
essays <- matrix('', 1,2)
essays
esslist
esslist <- list.files(paste(parentdir, i, sep='/'), pattern='.*.txt')
esslist <- list.files(paste(d, 'lirsm', sep='/'), pattern='.*.txt')
esslist
essays
essays <- esslist
essays
dim(essays)
essays
str(essays)
?list
getannotations <- function(parentdir){
dirlist <- list.files(parentdir, pattern='lirsm*')
essays <- ''
paths <- ''
for(i in dirlist){
esslist <- list.files(paste(parentdir, i, sep='/'), pattern='.*.txt')
path <- paste(parentdir, i, esslist, sep='/')
essays <- c(essays, esslist),
paths <- c(paths, path)
}
return(cbind(essays, path))
}
getannotations <- function(parentdir){
dirlist <- list.files(parentdir, pattern='lirsm*')
essays <- ''
paths <- ''
for(i in dirlist){
esslist <- list.files(paste(parentdir, i, sep='/'), pattern='.*.txt')
path <- paste(parentdir, i, esslist, sep='/')
essays <- c(essays, esslist)
paths <- c(paths, path)
}
return(cbind(essays, path))
}
a <- getannotations(d)
getannotations <- function(parentdir){
dirlist <- list.files(parentdir, pattern='lirsm*')
essays <- ''
paths <- ''
for(i in dirlist){
esslist <- list.files(paste(parentdir, i, sep='/'), pattern='.*.txt')
path <- paste(parentdir, i, esslist, sep='/')
essays <- c(essays, esslist)
paths <- c(paths, path)
}
return(cbind(essays, paths))
}
a <- getannotations(d)
a
ess.file <- getannotations(d)
ess.first <- ess.file[which(str_detect(ess.file, '^[0-9]'))]
head(ess.file)
head(ess.first)
ess.first <- ess.file[which(str_detect(ess.file[,1], '^[0-9]'))]
getannotations <- function(parentdir){
dirlist <- list.files(parentdir, pattern='lirsm*')
essays <- ''
paths <- ''
for(i in dirlist){
esslist <- list.files(paste(parentdir, i, sep='/'), pattern='.*.txt')
path <- paste(parentdir, i, esslist, sep='/')
essays <- c(essays, esslist)
paths <- c(paths, path)
}
return(data.frame(essays, paths))
}
ess.file <- getannotations(d)
head(ess.file)
ess.first <- ess.file[which(str_detect(ess.file$essays, '^[0-9]'))]
ess.first <- ess.file[which(str_detect(ess.file$essays, '^[0-9]')),]
file.comp <- str_split(ess.first$essays, pattern = '_')
file.comp <- file.comp[-1]
ess.first <- ess.first[-1,]
ess.file <- getannotations(d)
ess.first <- ess.file[which(str_detect(ess.file$essays, '^[0-9]')),]
file.comp <- str_split(ess.first$essays, pattern = '_')
file.comp <- file.comp[-1]
ess.first <- ess.first[-1,]
head(ess.first)
filedetails <- data.frame(filename=ess.first$essays,
id=unlist(lapply(file.comp, '[[', 1)),
cond=unlist(lapply(file.comp, '[[', 2)),
date=unlist(lapply(file.comp, '[[', 3)),
int=unlist(lapply(file.comp, '[[', 4)),
path=ess.first$paths)
head(filedetails)
filedetails$int <- substr(filedetails$int, 1,1)
filedetails$essay <- ''
head(filedetails)
for(i in filedetails$path){
filedetails$essay[i]<-read.table(filedetails$path[i])
}
for(i in filedetails$path){
filedetails$essay[i]<-read.table(paste(filedetails$path[i]))
}
filedetails
filedetails$path
read.table(filedetails$path[1])
read.table(as.character(filedetails$path[1]))
scan(as.character(filedetails$path[1]))
readLines(as.character(filedetails$path[1]))
?scan
?readLines
readLines(as.character(filedetails$path[2]))
readLines(as.character(filedetails$path[3]))
readLines(as.character(filedetails$path[4]))
readLines(as.character(filedetails$path[5]))
for(i in filedetails$path){
filedetails$essay[i]<-readLines(as.character(filedetails$path[i]))
}
table(is.na(as.character(filedetails$path)))
for(i in filedetails$path){
try{
filedetails$essay[i]<-readLines(as.character(filedetails$path[i]))
}
}
for(i in filedetails$path){
try(filedetails$essay[i]<-readLines(as.character(filedetails$path[i])))
}
head(filedetails)
for(i in 1:length(filedetails$path)){
try(filedetails$essay[i]<-readLines(as.character(filedetails$path[i])))
}
head(filedetails)
1/6
.012/.015
filedetails$essay[1:8]
filedetails$essay[5000:5008]
