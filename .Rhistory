X[,3] <- mycut(X[,3], c(0, 1-p$condition, 1))-1
df1<-model.mat(X)
df.preds <- data.frame(effect=c('cov', 'group', 'cond',
'cov*group', 'cov*cond', 'group*cond',
'cov*group*cond'),
value=c(1,0,1,
0,0,0,
0))
y.obs <- get.outcome(df1, df.preds, 1)
df1<-cbind(y.obs, df1)
df1$group<-factor(df1$group, labels = c('Nonstigmatized', 'Stigmatized'))
df1$cond<-factor(df1$cond, labels=c('Control', 'Treatment'))
b<-lm(y.obs~cov+group*cond, dat=df1)
adjustedmeans <- effect('group*cond', b)
unadjustedmeans <- tapply(df1$y.obs, list(df1$group, df1$cond), mean)
cov.means <- tapply(df1$cov, list(df1$group, df1$cond), mean)
results.mat[i, 4:8] <- b$coefficients
results.mat[i, 9:13] <- summary(b)$coefficients[c(1,2,3,4,5),4]
means.mat[i, 4:15] <- c(unadjustedmeans[1:4], adjustedmeans$fit,
cov.means[1:4])
}
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
coefs <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars=c('intercept', 'cov', 'group', 'cond', 'group:cond'))
ggplot(coefs, aes(x=value, group=as.factor(slope),
color=as.factor(slope))) +
geom_density() + facet_grid(variable~groups, scales='free') + theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.cond'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
theme_bw()
### there's something fishy here. Running this simulation should return values of zero, but they're biased by .06 or so. I suspect that the interaction term of .25 is getting distributed across the other parameters
options(contrasts = c('contr.treatment','contr.poly'))
slope <- sample(rep(c(0, .5, 1), len=10000))
groups <- sample(rep(c(.25, .5, .75), len=10000))
condition <- sample(rep(c(.5), len=10000))
results.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 10)))
colnames(results.mat) <- c('slope', 'groups', 'condition', 'intercept', 'cov',
'group', 'cond', 'group:cond', 'p.intercept',
'p.cov', 'p.group', 'p.cond', 'p.group:cond')
means.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 12)))
colnames(means.mat) <- c('slope', 'groups', 'conditon',
'Nonstig.C.unadj', 'Stig.C.unadj',
'Nonstig.T.unadj', 'Stig.T.unadj',
'Nonstig.C.adj', 'Stig.C.adj',
'Nonstig.T.adj', 'Stig.T.adj',
'Nonstig.C.cov', 'Stig.C.cov',
'Nonstig.T.cov', 'Stig.T.cov')
for(i in 1:10000){
n <- 100
a <- cor.mat(c(0,0,0))
X <- as.data.frame(mvrnorm(n=n, mu=c(0,0,0), Sigma=a))
p <- list(group = groups[i], condition = .5)
X[,2] <- mycut(X[,2], c(0, 1-p$group, 1))-1
X[,3] <- mycut(X[,3], c(0, 1-p$condition, 1))-1
df1<-model.mat(X)
df.preds <- data.frame(effect=c('cov', 'group', 'cond',
'cov*group', 'cov*cond', 'group*cond',
'cov*group*cond'),
value=c(1,0,0,
0,0,.25,
0))
y.obs <- get.outcome(df1, df.preds, 1)
df1<-cbind(y.obs, df1)
df1$group<-factor(df1$group, labels = c('Nonstigmatized', 'Stigmatized'))
df1$cond<-factor(df1$cond, labels=c('Control', 'Treatment'))
b<-lm(y.obs~cov+group*cond, dat=df1)
adjustedmeans <- effect('group*cond', b)
unadjustedmeans <- tapply(df1$y.obs, list(df1$group, df1$cond), mean)
cov.means <- tapply(df1$cov, list(df1$group, df1$cond), mean)
results.mat[i, 4:8] <- b$coefficients
results.mat[i, 9:13] <- summary(b)$coefficients[c(1,2,3,4,5),4]
means.mat[i, 4:15] <- c(unadjustedmeans[1:4], adjustedmeans$fit,
cov.means[1:4])
}
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
coefs <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars=c('intercept', 'cov', 'group', 'cond', 'group:cond'))
ggplot(coefs, aes(x=value, group=as.factor(slope),
color=as.factor(slope))) +
geom_density() + facet_grid(variable~groups, scales='free') + theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .3))
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .3)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
### there's something fishy here. Running this simulation should return values of zero, but they're biased by .06 or so. I suspect that the interaction term of .25 is getting distributed across the other parameters
options(contrasts = c('contr.treatment','contr.poly'))
slope <- sample(rep(c(0, .5, 1), len=10000))
groups <- sample(rep(c(.25, .5, .75), len=10000))
condition <- sample(rep(c(.5), len=10000))
results.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 10)))
colnames(results.mat) <- c('slope', 'groups', 'condition', 'intercept', 'cov',
'group', 'cond', 'group:cond', 'p.intercept',
'p.cov', 'p.group', 'p.cond', 'p.group:cond')
means.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 12)))
colnames(means.mat) <- c('slope', 'groups', 'conditon',
'Nonstig.C.unadj', 'Stig.C.unadj',
'Nonstig.T.unadj', 'Stig.T.unadj',
'Nonstig.C.adj', 'Stig.C.adj',
'Nonstig.T.adj', 'Stig.T.adj',
'Nonstig.C.cov', 'Stig.C.cov',
'Nonstig.T.cov', 'Stig.T.cov')
for(i in 1:10000){
n <- 100
a <- cor.mat(c(0,0,0))
X <- as.data.frame(mvrnorm(n=n, mu=c(0,0,0), Sigma=a))
p <- list(group = groups[i], condition = .5)
X[,2] <- mycut(X[,2], c(0, 1-p$group, 1))-1
X[,3] <- mycut(X[,3], c(0, 1-p$condition, 1))-1
df1<-model.mat(X)
df.preds <- data.frame(effect=c('cov', 'group', 'cond',
'cov*group', 'cov*cond', 'group*cond',
'cov*group*cond'),
value=c(1,0,0,
slope[i],0,.25,
0))
y.obs <- get.outcome(df1, df.preds, 1)
df1<-cbind(y.obs, df1)
df1$group<-factor(df1$group, labels = c('Nonstigmatized', 'Stigmatized'))
df1$cond<-factor(df1$cond, labels=c('Control', 'Treatment'))
b<-lm(y.obs~cov+group*cond, dat=df1)
adjustedmeans <- effect('group*cond', b)
unadjustedmeans <- tapply(df1$y.obs, list(df1$group, df1$cond), mean)
cov.means <- tapply(df1$cov, list(df1$group, df1$cond), mean)
results.mat[i, 4:8] <- b$coefficients
results.mat[i, 9:13] <- summary(b)$coefficients[c(1,2,3,4,5),4]
means.mat[i, 4:15] <- c(unadjustedmeans[1:4], adjustedmeans$fit,
cov.means[1:4])
}
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
coefs <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars=c('intercept', 'cov', 'group', 'cond', 'group:cond'))
ggplot(coefs, aes(x=value, group=as.factor(slope),
color=as.factor(slope))) +
geom_density() + facet_grid(variable~groups, scales='free') + theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .3)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
head(df.pvals)
### there's something fishy here. Running this simulation should return values of zero, but they're biased by .06 or so. I suspect that the interaction term of .25 is getting distributed across the other parameters
#options(contrasts = c('contr.treatment','contr.poly'))
options(contrasts = c('contr.sum','contr.poly'))
slope <- sample(rep(c(0, .5, 1), len=10000))
groups <- sample(rep(c(.25, .5, .75), len=10000))
condition <- sample(rep(c(.5), len=10000))
results.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 10)))
colnames(results.mat) <- c('slope', 'groups', 'condition', 'intercept', 'cov',
'group', 'cond', 'group:cond', 'p.intercept',
'p.cov', 'p.group', 'p.cond', 'p.group:cond')
means.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 12)))
colnames(means.mat) <- c('slope', 'groups', 'conditon',
'Nonstig.C.unadj', 'Stig.C.unadj',
'Nonstig.T.unadj', 'Stig.T.unadj',
'Nonstig.C.adj', 'Stig.C.adj',
'Nonstig.T.adj', 'Stig.T.adj',
'Nonstig.C.cov', 'Stig.C.cov',
'Nonstig.T.cov', 'Stig.T.cov')
for(i in 1:10000){
n <- 100
a <- cor.mat(c(0,0,0))
X <- as.data.frame(mvrnorm(n=n, mu=c(0,0,0), Sigma=a))
p <- list(group = groups[i], condition = .5)
X[,2] <- mycut(X[,2], c(0, 1-p$group, 1))-1
X[,3] <- mycut(X[,3], c(0, 1-p$condition, 1))-1
df1<-model.mat(X)
df.preds <- data.frame(effect=c('cov', 'group', 'cond',
'cov*group', 'cov*cond', 'group*cond',
'cov*group*cond'),
value=c(1,0,0,
slope[i],0,.25,
0))
y.obs <- get.outcome(df1, df.preds, 1)
df1<-cbind(y.obs, df1)
df1$group<-factor(df1$group, labels = c('Nonstigmatized', 'Stigmatized'))
df1$cond<-factor(df1$cond, labels=c('Control', 'Treatment'))
b<-lm(y.obs~cov+group*cond, dat=df1)
adjustedmeans <- effect('group*cond', b)
unadjustedmeans <- tapply(df1$y.obs, list(df1$group, df1$cond), mean)
cov.means <- tapply(df1$cov, list(df1$group, df1$cond), mean)
results.mat[i, 4:8] <- b$coefficients
results.mat[i, 9:13] <- summary(b)$coefficients[c(1,2,3,4,5),4]
means.mat[i, 4:15] <- c(unadjustedmeans[1:4], adjustedmeans$fit,
cov.means[1:4])
}
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
coefs <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars=c('intercept', 'cov', 'group', 'cond', 'group:cond'))
ggplot(coefs, aes(x=value, group=as.factor(slope),
color=as.factor(slope))) +
geom_density() + facet_grid(variable~groups, scales='free') + theme_bw()
### there's something fishy here. Running this simulation should return values of zero, but they're biased by .06 or so. I suspect that the interaction term of .25 is getting distributed across the other parameters
options(contrasts = c('contr.treatment','contr.poly'))
#options(contrasts = c('contr.sum','contr.poly'))
slope <- sample(rep(c(0, .5, 1), len=10000))
groups <- sample(rep(c(.25, .5, .75), len=10000))
condition <- sample(rep(c(.5), len=10000))
results.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 10)))
colnames(results.mat) <- c('slope', 'groups', 'condition', 'intercept', 'cov',
'group', 'cond', 'group:cond', 'p.intercept',
'p.cov', 'p.group', 'p.cond', 'p.group:cond')
means.mat <- as.matrix(cbind(slope, groups, condition, matrix(0, 10000, 12)))
colnames(means.mat) <- c('slope', 'groups', 'conditon',
'Nonstig.C.unadj', 'Stig.C.unadj',
'Nonstig.T.unadj', 'Stig.T.unadj',
'Nonstig.C.adj', 'Stig.C.adj',
'Nonstig.T.adj', 'Stig.T.adj',
'Nonstig.C.cov', 'Stig.C.cov',
'Nonstig.T.cov', 'Stig.T.cov')
for(i in 1:10000){
n <- 100
a <- cor.mat(c(-.25,0,0))
X <- as.data.frame(mvrnorm(n=n, mu=c(0,0,0), Sigma=a))
p <- list(group = groups[i], condition = .5)
X[,2] <- mycut(X[,2], c(0, 1-p$group, 1))-1
X[,3] <- mycut(X[,3], c(0, 1-p$condition, 1))-1
df1<-model.mat(X)
df.preds <- data.frame(effect=c('cov', 'group', 'cond',
'cov*group', 'cov*cond', 'group*cond',
'cov*group*cond'),
value=c(1,0,0,
slope[i],0,.25,
0))
y.obs <- get.outcome(df1, df.preds, 1)
df1<-cbind(y.obs, df1)
df1$group<-factor(df1$group, labels = c('Nonstigmatized', 'Stigmatized'))
df1$cond<-factor(df1$cond, labels=c('Control', 'Treatment'))
b<-lm(y.obs~cov+group*cond, dat=df1)
adjustedmeans <- effect('group*cond', b)
unadjustedmeans <- tapply(df1$y.obs, list(df1$group, df1$cond), mean)
cov.means <- tapply(df1$cov, list(df1$group, df1$cond), mean)
results.mat[i, 4:8] <- b$coefficients
results.mat[i, 9:13] <- summary(b)$coefficients[c(1,2,3,4,5),4]
means.mat[i, 4:15] <- c(unadjustedmeans[1:4], adjustedmeans$fit,
cov.means[1:4])
}
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
coefs <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars=c('intercept', 'cov', 'group', 'cond', 'group:cond'))
ggplot(coefs, aes(x=value, group=as.factor(slope),
color=as.factor(slope))) +
geom_density() + facet_grid(variable~groups, scales='free') + theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .3)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .25)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.cond'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .25)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group:cond'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .25)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
library(dplyr)
df <- as.data.frame(cbind(run=seq(1:10000),results.mat))
df.pvals <- melt(df, id.vars=c('run', 'slope', 'groups'),
measure.vars = c('p.group'))
df.pvals <- df.pvals %>%
group_by(slope, groups, variable) %>%
mutate(propsig=sum(value<.05)/length(value)) %>%
ungroup
ggplot(df.pvals, aes(x=as.factor(slope), y=propsig, group=as.factor(groups),
color=as.factor(groups))) +
geom_point() + geom_line() +
facet_wrap(~variable) +
scale_y_continuous(limits=c(0, .25)) +
geom_hline(aes(yintercept=.05)) +
theme_bw()
install.packages('rstan', dependencies=T)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = 'Desktop/8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
print (fit)
print(fit)
plot(fit)
pairs(fit, pars = c("mu", "tau", "lp__"))
la <- extract(fit, permuted = TRUE) # return a list of arrays
mu <- la$mu
a <- extract(fit, permuted = FALSE)
a2 <- as.array(fit)
m <- as.matrix(fit)
print(fit, digits = 1)
50/3
sqrt(16.66)
library(foreign)
library(xlsx)
df <- read.xlsx('Desktop/prompts10.5.15.xls', sheetIndex = 1)
head(df)
names(df)
df[1:5, 1]
df[1:5, 2]
df[1:5, 3]
df[1:5, 4]
df[1:5, 5]
df[1:5, 6]
table(df$Prompt)
head(df)
df$Prompt[1:10]
table(df$Prompt)
head(df)
df$Prompt[1]
enc2utf(df$Prompt[1])
enc2utf8(df$Prompt[1])
enc2utf8(as.character(df$Prompt[1]))
enc2native(as.character(df$Prompt[1]))
names(df)
names(df[-1])
install.packages('printr')
library(printr)
install.packages(
'printr',
type = 'source',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
library(printr)
library(printr)
names(df[-1])
df.essays <- read.csv('../Data/3 CSV Files/essays9.30.15.csv', sep='|')
setwd("~/Documents/Gits/Database-create-maintain")
df.essays <- read.csv('../Data/3 CSV Files/essays9.30.15.csv', sep='|')
names(df.essays)
df.demographics <- read.csv('../Data/3 CSV Files/demog9.11.15.csv')
names(df.demographics)
names(df.demographics)[-6:8]
names(df.demographics)[-6:-8]
df.outcomes <- read.csv('../Data/3 CSV Files/grades9.11.15.csv')
names(df.outcomes)[-6:-8]
names(df.outcomes)
head(df.outcomes)
names(df[-1])
names(df.outcomes)[-1]
names(df.essays)
names(df[-1])
names(df[-1])
format(Sys.time(), ''%d %B %Y'')
?format
library(xlsx)
read.xlsx('../Data/3 CSV Files/prompts10.5.15.xls', sheetIndex = 1)
df.prompts <- read.xlsx('../Data/3 CSV Files/prompts10.5.15.xls', sheetIndex = 1)
names(df.prompts)[-1]
setwd("~/Documents/Gits/Database-create-maintain")
df.essays <- read.csv('../Data/3 CSV Files/essays9.30.15.csv', sep = |)
head(df.essays)
df.essays <- read.csv('../Data/3 CSV Files/essays9.30.15.csv', sep = |)
df.essays <- read.csv('../Data/3 CSV Files/essays9.30.15.csv', sep = '|')
df.essays <- read.csv('../Data/3 CSV Files/essays9.30.15.csv', sep = '|')
df.essays <- read.csv('../Data/3 CSV Files/essays9.30.15.csv', sep = '|', quote="")
head(df.essays)
table(df.essays$Cohort)
library(dplyr)
table(df.essays$Study)
df.RA3 <- filter(df.essays, Study == 'Connecticut' && Cohort == c('Cohort 6',
'Cohort 7',
'Cohort 8' )) ##MB
df.RA3 <- filter(df.essays, Cohort == c('Cohort 6', 'Cohort 7', 'Cohort 8' )) ##MB
df.RA3 <- filter(df.essays, Cohort == 'Cohort 6' | Cohort = 'Cohort 7' | Cohort = 'Cohort 8' )) ##MB
df.RA3 <- filter(df.essays, Cohort == 'Cohort 6' | Cohort = 'Cohort 7' | Cohort == 'Cohort 8' )) ##MB
df.RA3 <- filter(df.essays, Cohort == 'Cohort 6' | Cohort == 'Cohort 7' | Cohort == 'Cohort 8' )) ##MB
df.RA3 <- filter(df.essays, Cohort == 'Cohort 6' | Cohort == 'Cohort 7' | Cohort == 'Cohort 8' ) ##MB
df.RA3 <- filter(df.essays, Cohort == 'Cohort 6 ' | Cohort == 'Cohort 7' | Cohort == 'Cohort 8' ) ##MB
df.RA1 <- filter(df.essays, Cohort == 'Cohort 3 ' |
Cohort == 'Cohort 4' | Cohort == 'Cohort 8' )) ##JB
df.RA1 <- filter(df.essays, Cohort == 'Cohort 3' |
Cohort == 'Cohort 4' | Cohort == 'Cohort 8' ) ##JB
df.RA2 <- filter(df.essays, Cohort == 'Cohort 1' |
Cohort == 'Cohort 2' | Cohort == 'Cohort 5' ) ##TT
table(df.RA3)
head(df.essays)
table(df.essays$Study)
df.RA3 <- filter(df.essays, Study == 'CO/CA Latino') %>%
bind_rows(, df.RA3)
df.RA3 <- filter(df.essays, Study == 'CO/CA Latino') %>%
bind_rows(df.RA3)
write.table(df.RA1 , 'RA1.csv', sep='|', row.names=F, quote=F)
write.table(df.RA2 , 'RA2.csv', sep='|', row.names=F, quote=F)
write.table(df.RA3 , 'RA3.csv', sep='|', row.names=F, quote=F)
df.essays <- read.csv('RA3.csv', sep = '|', quote="")
df.essays <- read.csv('../Data/3 CSV Files/essays9.30.15.csv', sep = '|', quote="")
a <- read.csv('../Data/3 CSV Files/RA1a.csv', sep='|', quote="")
